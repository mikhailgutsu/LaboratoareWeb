{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"onPressEnter\", \"defaultValue\", \"value\", \"autoSize\", \"onResize\", \"className\", \"style\", \"disabled\", \"onChange\", \"onInternalAutoSize\"];\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\nimport calculateAutoSizeStyle from \"./calculateNodeHeight\";\nvar RESIZE_START = 0;\nvar RESIZE_MEASURING = 1;\nvar RESIZE_STABLE = 2;\nvar ResizableTextArea = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _ref = props,\n    prefixCls = _ref.prefixCls,\n    onPressEnter = _ref.onPressEnter,\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    autoSize = _ref.autoSize,\n    onResize = _ref.onResize,\n    className = _ref.className,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    onChange = _ref.onChange,\n    onInternalAutoSize = _ref.onInternalAutoSize,\n    restProps = _objectWithoutProperties(_ref, _excluded); // =============================== Value ================================\n\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value,\n      postState: function postState(val) {\n        return val !== null && val !== void 0 ? val : '';\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedValue = _useMergedState2[0],\n    setMergedValue = _useMergedState2[1];\n  var onInternalChange = function onInternalChange(event) {\n    setMergedValue(event.target.value);\n    onChange === null || onChange === void 0 ? void 0 : onChange(event);\n  }; // ================================ Ref =================================\n\n  var textareaRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      textArea: textareaRef.current\n    };\n  }); // ============================== AutoSize ==============================\n\n  var _React$useMemo = React.useMemo(function () {\n      if (autoSize && _typeof(autoSize) === 'object') {\n        return [autoSize.minRows, autoSize.maxRows];\n      }\n      return [];\n    }, [autoSize]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    minRows = _React$useMemo2[0],\n    maxRows = _React$useMemo2[1];\n  var needAutoSize = !!autoSize; // =============================== Scroll ===============================\n  // https://github.com/ant-design/ant-design/issues/21870\n\n  var fixFirefoxAutoScroll = function fixFirefoxAutoScroll() {\n    try {\n      // FF has bug with jump of scroll to top. We force back here.\n      if (document.activeElement === textareaRef.current) {\n        var _textareaRef$current = textareaRef.current,\n          selectionStart = _textareaRef$current.selectionStart,\n          selectionEnd = _textareaRef$current.selectionEnd,\n          scrollTop = _textareaRef$current.scrollTop; // Fix Safari bug which not rollback when break line\n        // This makes Chinese IME can't input. Do not fix this\n        // const { value: tmpValue } = textareaRef.current;\n        // textareaRef.current.value = '';\n        // textareaRef.current.value = tmpValue;\n\n        textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n        textareaRef.current.scrollTop = scrollTop;\n      }\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }; // =============================== Resize ===============================\n\n  var _React$useState = React.useState(RESIZE_STABLE),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    resizeState = _React$useState2[0],\n    setResizeState = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    autoSizeStyle = _React$useState4[0],\n    setAutoSizeStyle = _React$useState4[1];\n  var startResize = function startResize() {\n    setResizeState(RESIZE_START);\n    if (process.env.NODE_ENV === 'test') {\n      onInternalAutoSize === null || onInternalAutoSize === void 0 ? void 0 : onInternalAutoSize();\n    }\n  }; // Change to trigger resize measure\n\n  useLayoutEffect(function () {\n    if (needAutoSize) {\n      startResize();\n    }\n  }, [value, minRows, maxRows, needAutoSize]);\n  useLayoutEffect(function () {\n    if (resizeState === RESIZE_START) {\n      setResizeState(RESIZE_MEASURING);\n    } else if (resizeState === RESIZE_MEASURING) {\n      var textareaStyles = calculateAutoSizeStyle(textareaRef.current, false, minRows, maxRows); // Safari has bug that text will keep break line on text cut when it's prev is break line.\n      // ZombieJ: This not often happen. So we just skip it.\n      // const { selectionStart, selectionEnd, scrollTop } = textareaRef.current;\n      // const { value: tmpValue } = textareaRef.current;\n      // textareaRef.current.value = '';\n      // textareaRef.current.value = tmpValue;\n      // if (document.activeElement === textareaRef.current) {\n      //   textareaRef.current.scrollTop = scrollTop;\n      //   textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n      // }\n\n      setResizeState(RESIZE_STABLE);\n      setAutoSizeStyle(textareaStyles);\n    } else {\n      fixFirefoxAutoScroll();\n    }\n  }, [resizeState]); // We lock resize trigger by raf to avoid Safari warning\n\n  var resizeRafRef = React.useRef();\n  var cleanRaf = function cleanRaf() {\n    raf.cancel(resizeRafRef.current);\n  };\n  var onInternalResize = function onInternalResize(size) {\n    if (resizeState === RESIZE_STABLE) {\n      onResize === null || onResize === void 0 ? void 0 : onResize(size);\n      if (autoSize) {\n        cleanRaf();\n        resizeRafRef.current = raf(function () {\n          startResize();\n        });\n      }\n    }\n  };\n  React.useEffect(function () {\n    return cleanRaf;\n  }, []); // =============================== Render ===============================\n\n  var mergedAutoSizeStyle = needAutoSize ? autoSizeStyle : null;\n  var mergedStyle = _objectSpread(_objectSpread({}, style), mergedAutoSizeStyle);\n  if (resizeState === RESIZE_START || resizeState === RESIZE_MEASURING) {\n    mergedStyle.overflowY = 'hidden';\n    mergedStyle.overflowX = 'hidden';\n  }\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onInternalResize,\n    disabled: !(autoSize || onResize)\n  }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\n    ref: textareaRef,\n    style: mergedStyle,\n    className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)),\n    disabled: disabled,\n    value: mergedValue,\n    onChange: onInternalChange\n  })));\n});\nexport default ResizableTextArea;","map":{"version":3,"names":["_extends","_defineProperty","_objectSpread","_typeof","_slicedToArray","_objectWithoutProperties","_excluded","classNames","ResizeObserver","useLayoutEffect","useMergedState","raf","React","calculateAutoSizeStyle","RESIZE_START","RESIZE_MEASURING","RESIZE_STABLE","ResizableTextArea","forwardRef","props","ref","_ref","prefixCls","onPressEnter","defaultValue","value","autoSize","onResize","className","style","disabled","onChange","onInternalAutoSize","restProps","_useMergedState","postState","val","_useMergedState2","mergedValue","setMergedValue","onInternalChange","event","target","textareaRef","useRef","useImperativeHandle","textArea","current","_React$useMemo","useMemo","minRows","maxRows","_React$useMemo2","needAutoSize","fixFirefoxAutoScroll","document","activeElement","_textareaRef$current","selectionStart","selectionEnd","scrollTop","setSelectionRange","e","_React$useState","useState","_React$useState2","resizeState","setResizeState","_React$useState3","_React$useState4","autoSizeStyle","setAutoSizeStyle","startResize","process","env","NODE_ENV","textareaStyles","resizeRafRef","cleanRaf","cancel","onInternalResize","size","useEffect","mergedAutoSizeStyle","mergedStyle","overflowY","overflowX","createElement","concat"],"sources":["C:/Users/VARZARI/Desktop/GITHUB/Lab1_VarzariNicolae_CR-212/my-react-project/my-app/node_modules/rc-textarea/es/ResizableTextArea.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nvar _excluded = [\"prefixCls\", \"onPressEnter\", \"defaultValue\", \"value\", \"autoSize\", \"onResize\", \"className\", \"style\", \"disabled\", \"onChange\", \"onInternalAutoSize\"];\r\nimport classNames from 'classnames';\r\nimport ResizeObserver from 'rc-resize-observer';\r\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\r\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\r\nimport raf from \"rc-util/es/raf\";\r\nimport * as React from 'react';\r\nimport calculateAutoSizeStyle from \"./calculateNodeHeight\";\r\nvar RESIZE_START = 0;\r\nvar RESIZE_MEASURING = 1;\r\nvar RESIZE_STABLE = 2;\r\nvar ResizableTextArea = /*#__PURE__*/React.forwardRef(function (props, ref) {\r\n  var _ref = props,\r\n      prefixCls = _ref.prefixCls,\r\n      onPressEnter = _ref.onPressEnter,\r\n      defaultValue = _ref.defaultValue,\r\n      value = _ref.value,\r\n      autoSize = _ref.autoSize,\r\n      onResize = _ref.onResize,\r\n      className = _ref.className,\r\n      style = _ref.style,\r\n      disabled = _ref.disabled,\r\n      onChange = _ref.onChange,\r\n      onInternalAutoSize = _ref.onInternalAutoSize,\r\n      restProps = _objectWithoutProperties(_ref, _excluded); // =============================== Value ================================\r\n\r\n\r\n  var _useMergedState = useMergedState(defaultValue, {\r\n    value: value,\r\n    postState: function postState(val) {\r\n      return val !== null && val !== void 0 ? val : '';\r\n    }\r\n  }),\r\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\r\n      mergedValue = _useMergedState2[0],\r\n      setMergedValue = _useMergedState2[1];\r\n\r\n  var onInternalChange = function onInternalChange(event) {\r\n    setMergedValue(event.target.value);\r\n    onChange === null || onChange === void 0 ? void 0 : onChange(event);\r\n  }; // ================================ Ref =================================\r\n\r\n\r\n  var textareaRef = React.useRef();\r\n  React.useImperativeHandle(ref, function () {\r\n    return {\r\n      textArea: textareaRef.current\r\n    };\r\n  }); // ============================== AutoSize ==============================\r\n\r\n  var _React$useMemo = React.useMemo(function () {\r\n    if (autoSize && _typeof(autoSize) === 'object') {\r\n      return [autoSize.minRows, autoSize.maxRows];\r\n    }\r\n\r\n    return [];\r\n  }, [autoSize]),\r\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\r\n      minRows = _React$useMemo2[0],\r\n      maxRows = _React$useMemo2[1];\r\n\r\n  var needAutoSize = !!autoSize; // =============================== Scroll ===============================\r\n  // https://github.com/ant-design/ant-design/issues/21870\r\n\r\n  var fixFirefoxAutoScroll = function fixFirefoxAutoScroll() {\r\n    try {\r\n      // FF has bug with jump of scroll to top. We force back here.\r\n      if (document.activeElement === textareaRef.current) {\r\n        var _textareaRef$current = textareaRef.current,\r\n            selectionStart = _textareaRef$current.selectionStart,\r\n            selectionEnd = _textareaRef$current.selectionEnd,\r\n            scrollTop = _textareaRef$current.scrollTop; // Fix Safari bug which not rollback when break line\r\n        // This makes Chinese IME can't input. Do not fix this\r\n        // const { value: tmpValue } = textareaRef.current;\r\n        // textareaRef.current.value = '';\r\n        // textareaRef.current.value = tmpValue;\r\n\r\n        textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\r\n        textareaRef.current.scrollTop = scrollTop;\r\n      }\r\n    } catch (e) {// Fix error in Chrome:\r\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\r\n      // http://stackoverflow.com/q/21177489/3040605\r\n    }\r\n  }; // =============================== Resize ===============================\r\n\r\n\r\n  var _React$useState = React.useState(RESIZE_STABLE),\r\n      _React$useState2 = _slicedToArray(_React$useState, 2),\r\n      resizeState = _React$useState2[0],\r\n      setResizeState = _React$useState2[1];\r\n\r\n  var _React$useState3 = React.useState(),\r\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\r\n      autoSizeStyle = _React$useState4[0],\r\n      setAutoSizeStyle = _React$useState4[1];\r\n\r\n  var startResize = function startResize() {\r\n    setResizeState(RESIZE_START);\r\n\r\n    if (process.env.NODE_ENV === 'test') {\r\n      onInternalAutoSize === null || onInternalAutoSize === void 0 ? void 0 : onInternalAutoSize();\r\n    }\r\n  }; // Change to trigger resize measure\r\n\r\n\r\n  useLayoutEffect(function () {\r\n    if (needAutoSize) {\r\n      startResize();\r\n    }\r\n  }, [value, minRows, maxRows, needAutoSize]);\r\n  useLayoutEffect(function () {\r\n    if (resizeState === RESIZE_START) {\r\n      setResizeState(RESIZE_MEASURING);\r\n    } else if (resizeState === RESIZE_MEASURING) {\r\n      var textareaStyles = calculateAutoSizeStyle(textareaRef.current, false, minRows, maxRows); // Safari has bug that text will keep break line on text cut when it's prev is break line.\r\n      // ZombieJ: This not often happen. So we just skip it.\r\n      // const { selectionStart, selectionEnd, scrollTop } = textareaRef.current;\r\n      // const { value: tmpValue } = textareaRef.current;\r\n      // textareaRef.current.value = '';\r\n      // textareaRef.current.value = tmpValue;\r\n      // if (document.activeElement === textareaRef.current) {\r\n      //   textareaRef.current.scrollTop = scrollTop;\r\n      //   textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\r\n      // }\r\n\r\n      setResizeState(RESIZE_STABLE);\r\n      setAutoSizeStyle(textareaStyles);\r\n    } else {\r\n      fixFirefoxAutoScroll();\r\n    }\r\n  }, [resizeState]); // We lock resize trigger by raf to avoid Safari warning\r\n\r\n  var resizeRafRef = React.useRef();\r\n\r\n  var cleanRaf = function cleanRaf() {\r\n    raf.cancel(resizeRafRef.current);\r\n  };\r\n\r\n  var onInternalResize = function onInternalResize(size) {\r\n    if (resizeState === RESIZE_STABLE) {\r\n      onResize === null || onResize === void 0 ? void 0 : onResize(size);\r\n\r\n      if (autoSize) {\r\n        cleanRaf();\r\n        resizeRafRef.current = raf(function () {\r\n          startResize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(function () {\r\n    return cleanRaf;\r\n  }, []); // =============================== Render ===============================\r\n\r\n  var mergedAutoSizeStyle = needAutoSize ? autoSizeStyle : null;\r\n\r\n  var mergedStyle = _objectSpread(_objectSpread({}, style), mergedAutoSizeStyle);\r\n\r\n  if (resizeState === RESIZE_START || resizeState === RESIZE_MEASURING) {\r\n    mergedStyle.overflowY = 'hidden';\r\n    mergedStyle.overflowX = 'hidden';\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\r\n    onResize: onInternalResize,\r\n    disabled: !(autoSize || onResize)\r\n  }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\r\n    ref: textareaRef,\r\n    style: mergedStyle,\r\n    className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)),\r\n    disabled: disabled,\r\n    value: mergedValue,\r\n    onChange: onInternalChange\r\n  })));\r\n});\r\nexport default ResizableTextArea;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}